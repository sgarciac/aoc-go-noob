#ip 1

// INITIALIZATION

0 addi 1 16 1 -> go to 17                
1 seti 1 5 5 -> r5 = 1
2 seti 1 2 3 -> r3 = 1

-> r4 = 10551358, r5 = 1, r3 = 1, r0 = 0

3 mulr 5 3 2 -> r2 = r5 * r3              for r5 = 1; r5 <= r4; r5++
4 eqrr 2 4 2 -> r2 = r2 == r4 ? 1 : 0           for r3 = 1; r3 <= r4
5 addr 2 1 1 -> jump (r2 + 1)                          if r5 * r3 = r4 then r0 += r5
6 addi 1 1 1 -> goto 8
7 addr 5 0 0 -> r0 = r0 + r5
8 addi 3 1 3 -> r3 = r3 + 1
9 gtrr 3 4 2 -> r2 = r3 > r4 ? 1 : 0
10 addr 1 2 1 -> jump (r2 + 1)
11 seti 2 6 1 -> goto 3
12 addi 5 1 5 -> r5 = r5 + 1
13 gtrr 5 4 2 -> r2 = r5 > r4 ? 1 : 0
14 addr 2 1 1 -> jump (r2 + 1)
15 seti 1 8 1 -> goto 2

16 mulr 1 1 1 -> EXIT PROGRAM

// INITIALIZATION SUBROUTINE

17 addi 4 2 4 ->  r4 = r4 + 2            
18 mulr 4 4 4 ->  r4 = r4 * r4
19 mulr 1 4 4 ->  r4 = r4 * 19
20 muli 4 11 4 -> r4 = r4 * 11
21 addi 2 5 2 -> r2 = r2 + 5
22 mulr 2 1 2 -> r2 = r2 * 22
23 addi 2 12 2 -> r2 = r2 + 12
24 addr 4 2 4 -> r4 = r4 + r2
25 addr 1 0 1 -> jump (r0 + 1)
26 seti 0 4 1 -> goto 1
27 setr 1 4 2 -> r2 = r1
28 mulr 2 1 2 -> r2 = r2 * 28
29 addr 1 2 2 -> r2 = 29 * r2
30 mulr 1 2 2 -> r2 = r2 * 30
31 muli 2 14 2 -> r2 = r2 * 14
32 mulr 2 1 2 -> r2 = r2 * 32
33 addr 4 2 4 -> r4 = r4 + r2
34 seti 0 3 0 -> r0 = 0
35 seti 0 7 1 -> goto 1                     
